name: Pull Request Opened
on:
  pull_request:
    types:
      - opened
      - reopened

jobs:
  opened:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: "Filter out unneeded dependencies"
        run: |
          cat .tool-versions | grep -vE "golang|nodejs|poetry|pulumi|python" > .filtered
          mv .filtered .tool-versions
      - uses: asdf-vm/actions/install@v1
      - name: Deploy preview environment
        env:
          BRANCH: ${{ github.head_ref }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-west-2
        run: |
          # Get EKS credentials
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER }}
          helm -n streamlit-preview upgrade --install "${BRANCH}" deployments/chart --set branch="${BRANCH}"
      - name: Wait for environment to be deployed
        run: |
          ATTEMPTS=0
          STATUS=$(curl -w '%{http_code}' -s -o /dev/null https://${{ github.head_ref }}.streamlit.aaronbatilo.dev/)
          until [ $ATTEMPTS -eq 10 ] || [ $STATUS -eq 200 ]; do
            echo "Website is not ready yet, waiting..."
            sleep 2
            ATTEMPTS=$(( ATTEMPTS + 1 ))
            STATUS=$(curl -w '%{http_code}' -s -o /dev/null https://${{ github.head_ref }}.streamlit.aaronbatilo.dev/)
          done
          [ $ATTEMPTS -lt 10 ]
      - uses: actions/github-script@v3
        with:
          script: |
            const body = 'View your PR in action by going to [https://${{ github.head_ref }}.streamlit.aaronbatilo.dev](https://${{ github.head_ref }}.streamlit.aaronbatilo.dev)';
            const { data: comments } = await github.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            console.log(comments);

            if (comments.some(c => c.body == body)) {
              console.log('Duplicate found, no comment will be made');
            } else {
              github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body
              })
            }
